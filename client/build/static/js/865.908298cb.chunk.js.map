{"version":3,"file":"static/js/865.908298cb.chunk.js","mappings":"gHAAO,MAAMA,EAAU,uB,qJCOvB,MAuNA,EAvNmBC,KACjB,MAAM,KAAEC,EAAI,MAAEC,IAAUC,EAAAA,EAAAA,KAAaC,GAAUA,EAAMC,QAC9CC,EAAOC,IAAYC,EAAAA,EAAAA,UAAS,KAC5BC,EAASC,IAAcF,EAAAA,EAAAA,WAAS,IAChCG,EAAWC,IAAgBJ,EAAAA,EAAAA,WAAS,IACpCK,EAAUC,IAAeN,EAAAA,EAAAA,UAAS,CAAEO,GAAI,KAAMC,KAAM,GAAIC,MAAO,GAAIC,SAAU,GAAIC,SAAU,MAC3FC,EAASC,IAAcb,EAAAA,EAAAA,UAAS,KAChCc,EAAMC,IAAWf,EAAAA,EAAAA,UAAS,IAC1BgB,EAAYC,IAAiBjB,EAAAA,EAAAA,UAAS,IACtCkB,EAAcC,IAAmBnB,EAAAA,EAAAA,WAAS,GAG3CoB,EAAaC,UACjB,IACE,MAAMC,QAAiBC,EAAAA,EAAMC,IAAI,GAAGjC,EAAAA,mBAAyBuB,YAA0B,CACrFW,QAAS,CACPC,cAAe,UAAUhC,OAG7BK,EAASuB,EAASK,KAAKA,KAAK7B,OAC5BmB,EAAcK,EAASK,KAAKA,KAAKC,WAAWZ,WAC9C,CAAE,MAAOa,GACPC,EAAAA,GAAQD,MAAM,wBAAyB,EACzC,CAAC,QACC3B,GAAW,EACb,GAgBI6B,EAAkB,WACtBzB,EAD2B0B,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,GAE/B5B,GAAa,EACf,EAEM+B,EAAmBA,KACvB/B,GAAa,GACbE,EAAY,CAAEC,GAAI,KAAMC,KAAM,GAAIC,MAAO,GAAIC,SAAU,GAAIC,SAAU,IAAK,EAGtEyB,EAAqBC,IACzB,MAAM,KAAE7B,EAAI,MAAE8B,GAAUD,EAAEE,OAC1BjC,EAAY,IAAKD,EAAU,CAACG,GAAO8B,GAAQ,EAwD7C,OAPAE,EAAAA,EAAAA,YAAU,KACRpB,IACa,UAAT3B,GA5Ee4B,WACnB,IACE,MAAMC,QAAiBC,EAAAA,EAAMC,IAAI,GAAGjC,EAAAA,oBAA2B,CAC7DkC,QAAS,CACPC,cAAe,UAAUhC,OAG7BmB,EAAWS,EAASK,KAAKA,KAC3B,CAAE,MAAOE,GACPC,EAAAA,GAAQD,MAAM,yBAA0B,EAC1C,GAmEEY,EACF,GACC,CAAC3B,EAAMrB,KAGRiD,EAAAA,EAAAA,MAAA,OAAKC,MAAO,CAAEC,gBAAiB,UAAWC,MAAO,QAASC,UAAW,QAASC,WAAY,QAASC,SAAA,EACjGC,EAAAA,EAAAA,KAAA,MAAIC,UAAU,mBAAkBF,SAAC,WACjCC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,6BAA6BP,MAAO,CAAEQ,MAAO,MAAOC,OAAQ,UAAWJ,UACpFC,EAAAA,EAAAA,KAACI,EAAAA,EAAM,CAACC,QAAQ,UAAUJ,UAAU,OAAOK,QAASA,IAAMxB,IAAkBiB,SAAC,gBAI/EN,EAAAA,EAAAA,MAACc,EAAAA,EAAK,CAACC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACL,QAAQ,OAAOX,MAAO,CAAEC,gBAAiB,UAAWO,MAAO,MAAOC,OAAQ,UAAWJ,SAAA,EACjHC,EAAAA,EAAAA,KAAA,SAAAD,UACEN,EAAAA,EAAAA,MAAA,MAAAM,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,UACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,UACM,UAATvD,IAAoBwD,EAAAA,EAAAA,KAAA,MAAAD,SAAI,YACzBC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,kBAGRC,EAAAA,EAAAA,KAAA,SAAAD,SACG/C,GACCgD,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAAA,MAAIW,QAAQ,IAAIV,UAAU,cAAaF,SAAC,iBAExClD,EAAMmC,QAAU,GAClBgB,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAAA,MAAIW,QAAQ,IAAIV,UAAU,cAAaF,SAAC,wBAG1Ca,MAAMC,QAAQhE,IAAUA,EAAMiE,KAAKC,IACjCtB,EAAAA,EAAAA,MAAA,MAAAM,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAKgB,EAAKxD,QACVyC,EAAAA,EAAAA,KAAA,MAAAD,SAAKgB,EAAKvD,QACA,UAAThB,IAAoBwD,EAAAA,EAAAA,KAAA,MAAAD,SAAKgB,EAAKC,OAAOzD,QACtCkC,EAAAA,EAAAA,MAAA,MAAAM,SAAA,EACEC,EAAAA,EAAAA,KAACI,EAAAA,EAAM,CAACC,QAAQ,UAAUC,QAASA,IAAMxB,EAAgBiC,GAAMhB,SAAC,UAGhEC,EAAAA,EAAAA,KAACI,EAAAA,EAAM,CAACC,QAAQ,SAASC,QAASA,IA3D7BlC,WACnB,GAAI6C,OAAOC,QAAQ,8CACjB,UACQ5C,EAAAA,EAAM6C,OAAO,GAAG7E,EAAAA,cAAoBgB,IAAM,CAC9CkB,QAAS,CACPC,cAAe,UAAUhC,OAG7BoC,EAAAA,GAAQuC,QAAQ,4BAA6B,GAC7CjD,GACF,CAAE,MAAOS,GACPC,EAAAA,GAAQD,MAAM,wBAAyB,EACzC,CACF,EA8CsDyC,CAAaN,EAAKzD,IAAK2C,UAAU,OAAMF,SAAC,gBAR3EgB,EAAKzD,WAiBrBsD,MAAMC,QAAQhE,IAAUA,EAAMmC,OAAS,IACtCgB,EAAAA,EAAAA,KAAAsB,EAAAA,SAAA,CAAAvB,UACEC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,kCAAkCP,MAAO,CAAEQ,MAAO,MAAOC,OAAQ,UAAWJ,UACzFN,EAAAA,EAAAA,MAAA,OAAKQ,UAAU,4BAA2BF,SAAA,EACxCC,EAAAA,EAAAA,KAACI,EAAAA,EAAM,CACLmB,SAAmB,IAAT1D,EACVyC,QAASA,IAAMxC,GAAS0D,GAASA,EAAO,IACxCvB,UAAU,OAAMF,SACjB,cAGDN,EAAAA,EAAAA,MAAA,QAAMQ,UAAU,OAAMF,SAAA,CAAC,QAAMlC,EAAK,OAAKE,MACvCiC,EAAAA,EAAAA,KAACI,EAAAA,EAAM,CACLmB,SAAU1D,IAASE,EACnBuC,QAASA,IAAMxC,GAAS0D,GAASA,EAAO,IAAGzB,SAC5C,iBAOTN,EAAAA,EAAAA,MAACgC,EAAAA,EAAK,CAACC,KAAMxE,EAAWyE,OAAQzC,EAAiBa,SAAA,EAC/CC,EAAAA,EAAAA,KAACyB,EAAAA,EAAMG,OAAM,CAACC,aAAW,EAAA9B,UACvBC,EAAAA,EAAAA,KAACyB,EAAAA,EAAMK,MAAK,CAAA/B,SAAE3C,EAASE,GAAK,YAAc,gBAE5C0C,EAAAA,EAAAA,KAACyB,EAAAA,EAAMM,KAAI,CAAAhC,UACTN,EAAAA,EAAAA,MAACuC,EAAAA,EAAI,CAACC,SA7HO7D,UACnBgB,EAAE8C,iBACFhE,GAAgB,GAChB,IACE,GAAId,EAASE,GAAI,CACf,MAAM,GAAEA,EAAE,KAAEC,EAAI,MAAEC,EAAK,SAAEC,EAAQ,SAAEC,GAAaN,EAC1C+E,EAAU,CAAE5E,OAAMC,QAAOC,WAAUC,kBACnCY,EAAAA,EAAM8D,IAAI,GAAG9F,EAAAA,cAAoBgB,IAAM6E,EAAS,CACpD3D,QAAS,CACPC,cAAe,UAAUhC,OAG7BoC,EAAAA,GAAQuC,QAAQ,4BAA6B,EAC/C,YACQ9C,EAAAA,EAAM+D,KAAK,GAAG/F,EAAAA,aAAoBc,EAAU,CAChDoB,QAAS,CACPC,cAAe,UAAUhC,OAG7BoC,EAAAA,GAAQuC,QAAQ,4BAA6B,GAE/CjD,IACAe,GACF,CAAE,MAAON,GAAQ,IAAD0D,EAAAC,EACd1D,EAAAA,GAAQD,OAAoB,QAAd0D,EAAA1D,EAAMP,gBAAQ,IAAAiE,GAAM,QAANC,EAAdD,EAAgB5D,YAAI,IAAA6D,OAAN,EAAdA,EAAsB1D,UAAW,sBAAuB,EACxE,CAAC,QACCX,GAAgB,EAClB,GAkGmC6B,SAAA,EAC3BN,EAAAA,EAAAA,MAACuC,EAAAA,EAAKQ,MAAK,CAACC,UAAU,OAAM1C,SAAA,EAC1BC,EAAAA,EAAAA,KAACgC,EAAAA,EAAKU,MAAK,CAAA3C,SAAC,UACZC,EAAAA,EAAAA,KAACgC,EAAAA,EAAKW,QAAO,CAACC,KAAK,OAAOrF,KAAK,OAAO8B,MAAOjC,EAASG,KAAMsF,SAAU1D,EAAmB2D,UAAQ,QAEnGrD,EAAAA,EAAAA,MAACuC,EAAAA,EAAKQ,MAAK,CAACC,UAAU,QAAO1C,SAAA,EAC3BC,EAAAA,EAAAA,KAACgC,EAAAA,EAAKU,MAAK,CAAA3C,SAAC,WACZC,EAAAA,EAAAA,KAACgC,EAAAA,EAAKW,QAAO,CAACC,KAAK,QAAQrF,KAAK,QAAQ8B,MAAOjC,EAASI,MAAOqF,SAAU1D,EAAmB2D,UAAQ,QAEtGrD,EAAAA,EAAAA,MAACuC,EAAAA,EAAKQ,MAAK,CAACC,UAAU,WAAU1C,SAAA,EAC9BC,EAAAA,EAAAA,KAACgC,EAAAA,EAAKU,MAAK,CAAA3C,SAAE3C,EAASE,GAAK,eAAiB,cAC5C0C,EAAAA,EAAAA,KAACgC,EAAAA,EAAKW,QAAO,CAACC,KAAK,OAAOrF,KAAK,WAAW8B,MAAOjC,EAASK,SAAUoF,SAAU1D,EAAmB2D,UAAW1F,EAASE,QAE7G,UAATd,IACCiD,EAAAA,EAAAA,MAACuC,EAAAA,EAAKQ,MAAK,CAACC,UAAU,WAAU1C,SAAA,EAC9BC,EAAAA,EAAAA,KAACgC,EAAAA,EAAKU,MAAK,CAAA3C,SAAC,YACZN,EAAAA,EAAAA,MAACuC,EAAAA,EAAKW,QAAO,CAACI,GAAG,SAASxF,KAAK,WAAW8B,MAAOjC,EAASM,SAAUmF,SAAU1D,EAAkBY,SAAA,EAC9FC,EAAAA,EAAAA,KAAA,UAAQX,MAAM,GAAEU,SAAC,kBAChBa,MAAMC,QAAQlD,IAAYA,EAAQmD,KAAKkC,IACtChD,EAAAA,EAAAA,KAAA,UAAwBX,MAAO2D,EAAO1F,GAAGyC,SAAE,GAAGiD,EAAOzF,WAAWyF,EAAOxF,SAA1DwF,EAAO1F,aAK5B0C,EAAAA,EAAAA,KAACI,EAAAA,EAAM,CAACC,QAAQ,UAAUuC,KAAK,SAASrB,SAAUtD,EAAa8B,SAC5D3C,EAASE,GAAK,cAAgB,uBAKnC,C,sFCpNV,MA+BA,EA/B2B2F,EAAAA,YAAiB,CAAAC,EAWzCC,KAAQ,IAXkC,SAC3CC,EAAQ,UACRnD,EAAS,QACTO,EAAO,SACPC,EAAQ,WACR4C,EAAU,MACV3C,EAAK,KACL4C,EAAI,QACJjD,EAAO,WACPkD,KACGC,GACJN,EACC,MAAMO,GAAoBC,EAAAA,EAAAA,IAAmBN,EAAU,SACjDO,EAAUC,IAAW3D,EAAWwD,EAAmBpD,GAAW,GAAGoD,KAAqBpD,IAAWiD,GAAQ,GAAGG,KAAqBH,IAAQ9C,GAAW,GAAGiD,KAAwC,kBAAZjD,EAAuB,WAAWA,IAAY,YAAaC,GAAY,GAAGgD,aAA8BJ,GAAc,GAAGI,eAAgC/C,GAAS,GAAG+C,WACxVI,GAAqB7D,EAAAA,EAAAA,KAAK,QAAS,IACpCwD,EACHvD,UAAW0D,EACXR,IAAKA,IAEP,GAAII,EAAY,CACd,IAAIO,EAAkB,GAAGL,eAIzB,MAH0B,kBAAfF,IACTO,EAAkB,GAAGA,KAAmBP,MAEtBvD,EAAAA,EAAAA,KAAK,MAAO,CAC9BC,UAAW6D,EACX/D,SAAU8D,GAEd,CACA,OAAOA,CAAK,G","sources":["utils/constants.js","views/CreteUser.js","../node_modules/react-bootstrap/esm/Table.js"],"sourcesContent":["export const baseUrl = \"http://localhost:3001\";\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Table, Button, Modal, Form } from 'react-bootstrap';\r\nimport { useSelector } from 'react-redux';\r\nimport axios from 'axios'; \r\nimport { message } from 'antd'; \r\nimport { baseUrl } from '../utils/constants'; \r\n\r\nconst CreateUser = () => {\r\n  const { role, token } = useSelector((state) => state.auth);\r\n  const [users, setUsers] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [modalShow, setModalShow] = useState(false);\r\n  const [userData, setUserData] = useState({ id: null, name: '', email: '', password: '', clientId: '' });\r\n  const [clients, setClients] = useState([]);\r\n  const [page, setPage] = useState(1);\r\n  const [totalPages, setTotalPages] = useState(1);\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const pageSize = 5;\r\n\r\n  const fetchUsers = async () => {\r\n    try {\r\n      const response = await axios.get(`${baseUrl}/api/user?page=${page}&limit=${pageSize}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`, \r\n        },\r\n      });\r\n      setUsers(response.data.data.users);\r\n      setTotalPages(response.data.data.pagination.totalPages);\r\n    } catch (error) {\r\n      message.error(\"Failed to fetch users\", 3);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const fetchClients = async () => {\r\n    try {\r\n      const response = await axios.get(`${baseUrl}/api/client/list`, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`, \r\n        },\r\n      });\r\n      setClients(response.data.data);\r\n    } catch (error) {\r\n      message.error(\"Error fetching clients\", 3);\r\n    }\r\n  };\r\n\r\n  const handleShowModal = (user = {}) => {\r\n    setUserData(user);\r\n    setModalShow(true);\r\n  };\r\n\r\n  const handleCloseModal = () => {\r\n    setModalShow(false);\r\n    setUserData({ id: null, name: '', email: '', password: '', clientId: '' });\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setUserData({ ...userData, [name]: value });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setIsSubmitting(true);\r\n    try {\r\n      if (userData.id) {\r\n        const { id, name, email, password, clientId } = userData;\r\n        const payload = { name, email, password, clientId };\r\n        await axios.put(`${baseUrl}/api/user/${id}`, payload, {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`, \r\n          },\r\n        });\r\n        message.success('User updated successfully', 3); \r\n      } else {\r\n        await axios.post(`${baseUrl}/api/user`, userData, {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`, \r\n          },\r\n        });\r\n        message.success('User created successfully', 3); \r\n      }\r\n      fetchUsers();\r\n      handleCloseModal();\r\n    } catch (error) {\r\n      message.error(error.response?.data?.message || 'Failed to save user', 3);\r\n    } finally {\r\n      setIsSubmitting(false);\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (id) => {\r\n    if (window.confirm('Are you sure you want to delete this user?')) {\r\n      try {\r\n        await axios.delete(`${baseUrl}/api/user/${id}`, {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        });\r\n        message.success('User deleted successfully', 3);\r\n        fetchUsers();\r\n      } catch (error) {\r\n        message.error('Failed to delete user', 3);\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchUsers();\r\n    if (role === 'admin') {\r\n      fetchClients();\r\n    }\r\n  }, [page, role]);\r\n\r\n  return (\r\n    <div style={{ backgroundColor: '#343a40', color: 'white', minHeight: '100vh', paddingTop: '20px' }}>\r\n      <h1 className=\"text-center mb-4\">Users</h1>\r\n      <div className=\"d-flex justify-content-end\" style={{ width: '80%', margin: '0 auto' }}>\r\n        <Button variant=\"primary\" className=\"mb-3\" onClick={() => handleShowModal()}>\r\n          Add User\r\n        </Button>\r\n      </div>\r\n      <Table striped bordered hover variant=\"dark\" style={{ backgroundColor: '#343a40', width: '80%', margin: '0 auto' }}>\r\n        <thead>\r\n          <tr>\r\n            <th>Name</th>\r\n            <th>Email</th>\r\n            {role === 'admin' && <th>Client</th>}\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {loading ? (\r\n            <tr>\r\n              <td colSpan=\"4\" className=\"text-center\">Loading...</td>\r\n            </tr>\r\n          ) : users.length <= 0 ? (\r\n            <tr>\r\n              <td colSpan=\"4\" className=\"text-center\">No data available</td>\r\n            </tr>\r\n          ) : (\r\n            Array.isArray(users) && users.map((user) => (\r\n              <tr key={user.id}>\r\n                <td>{user.name}</td>\r\n                <td>{user.email}</td>\r\n                {role === 'admin' && <td>{user.Client.name}</td>}\r\n                <td>\r\n                  <Button variant=\"warning\" onClick={() => handleShowModal(user)}>\r\n                    Edit\r\n                  </Button>\r\n                  <Button variant=\"danger\" onClick={() => handleDelete(user.id)} className=\"ml-2\">\r\n                    Delete\r\n                  </Button>\r\n                </td>\r\n              </tr>\r\n            ))\r\n          )}\r\n        </tbody>\r\n      </Table>\r\n      {Array.isArray(users) && users.length > 0 && (\r\n        <>\r\n          <div className=\"d-flex justify-content-end mt-3\" style={{ width: '80%', margin: '0 auto' }}>\r\n            <div className=\"d-flex align-items-center\">\r\n              <Button\r\n                disabled={page === 1}\r\n                onClick={() => setPage((prev) => prev - 1)}\r\n                className=\"mr-2\"\r\n              >\r\n                Previous\r\n              </Button>\r\n              <span className=\"mr-2\">Page {page} of {totalPages}</span>\r\n              <Button\r\n                disabled={page === totalPages}\r\n                onClick={() => setPage((prev) => prev + 1)}\r\n              >\r\n                Next\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </>\r\n      )}\r\n      <Modal show={modalShow} onHide={handleCloseModal}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{userData.id ? 'Edit User' : 'Add User'}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form onSubmit={handleSubmit}>\r\n            <Form.Group controlId=\"name\">\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control type=\"text\" name=\"name\" value={userData.name} onChange={handleInputChange} required />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"email\">\r\n              <Form.Label>Email</Form.Label>\r\n              <Form.Control type=\"email\" name=\"email\" value={userData.email} onChange={handleInputChange} required />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"password\">\r\n              <Form.Label>{userData.id ? 'New Password' : 'Password'}</Form.Label>\r\n              <Form.Control type=\"text\" name=\"password\" value={userData.password} onChange={handleInputChange} required={!userData.id} />\r\n            </Form.Group>\r\n            {role === 'admin' && (\r\n              <Form.Group controlId=\"clientId\">\r\n                <Form.Label>Client</Form.Label>\r\n                <Form.Control as=\"select\" name=\"clientId\" value={userData.clientId} onChange={handleInputChange}>\r\n                  <option value=\"\">Select Client</option>\r\n                  {Array.isArray(clients) && clients.map((client) => (\r\n                    <option key={client.id} value={client.id}>{`${client.name} || ${client.email}`}</option>\r\n                  ))}\r\n                </Form.Control>\r\n              </Form.Group>\r\n            )}\r\n            <Button variant=\"primary\" type=\"submit\" disabled={isSubmitting}>\r\n              {userData.id ? 'Update User' : 'Add User'}\r\n            </Button>\r\n          </Form>\r\n        </Modal.Body>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateUser;\r\n","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Table = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  striped,\n  bordered,\n  borderless,\n  hover,\n  size,\n  variant,\n  responsive,\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'table');\n  const classes = classNames(className, decoratedBsPrefix, variant && `${decoratedBsPrefix}-${variant}`, size && `${decoratedBsPrefix}-${size}`, striped && `${decoratedBsPrefix}-${typeof striped === 'string' ? `striped-${striped}` : 'striped'}`, bordered && `${decoratedBsPrefix}-bordered`, borderless && `${decoratedBsPrefix}-borderless`, hover && `${decoratedBsPrefix}-hover`);\n  const table = /*#__PURE__*/_jsx(\"table\", {\n    ...props,\n    className: classes,\n    ref: ref\n  });\n  if (responsive) {\n    let responsiveClass = `${decoratedBsPrefix}-responsive`;\n    if (typeof responsive === 'string') {\n      responsiveClass = `${responsiveClass}-${responsive}`;\n    }\n    return /*#__PURE__*/_jsx(\"div\", {\n      className: responsiveClass,\n      children: table\n    });\n  }\n  return table;\n});\nexport default Table;"],"names":["baseUrl","CreateUser","role","token","useSelector","state","auth","users","setUsers","useState","loading","setLoading","modalShow","setModalShow","userData","setUserData","id","name","email","password","clientId","clients","setClients","page","setPage","totalPages","setTotalPages","isSubmitting","setIsSubmitting","fetchUsers","async","response","axios","get","headers","Authorization","data","pagination","error","message","handleShowModal","arguments","length","undefined","handleCloseModal","handleInputChange","e","value","target","useEffect","fetchClients","_jsxs","style","backgroundColor","color","minHeight","paddingTop","children","_jsx","className","width","margin","Button","variant","onClick","Table","striped","bordered","hover","colSpan","Array","isArray","map","user","Client","window","confirm","delete","success","handleDelete","_Fragment","disabled","prev","Modal","show","onHide","Header","closeButton","Title","Body","Form","onSubmit","preventDefault","payload","put","post","_error$response","_error$response$data","Group","controlId","Label","Control","type","onChange","required","as","client","React","_ref","ref","bsPrefix","borderless","size","responsive","props","decoratedBsPrefix","useBootstrapPrefix","classes","classNames","table","responsiveClass"],"sourceRoot":""}
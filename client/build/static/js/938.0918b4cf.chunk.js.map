{"version":3,"file":"static/js/938.0918b4cf.chunk.js","mappings":"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","sources":["utils/constants.js","views/admin/CreateClient.js","../node_modules/react-bootstrap/esm/Table.js"],"sourcesContent":["export const baseUrl = \"http://localhost:3001\";\r\n","import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Table, Button, Modal, Form } from \"react-bootstrap\";\r\nimport { selectToken } from \"../../store/authSlice\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { message } from \"antd\";\r\nimport { baseUrl } from \"../../utils/constants.js\";\r\n\r\nconst CreateClient = () => {\r\n  const token = useSelector(selectToken);\r\n  const [clients, setClients] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [modalShow, setModalShow] = useState(false);\r\n  const [clientData, setClientData] = useState({\r\n    id: null,\r\n    name: \"\",\r\n    industry: \"\",\r\n    phone: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n  const [page, setPage] = useState(1);\r\n  const [totalPages, setTotalPages] = useState(1);\r\n  const pageSize = 5;\r\n\r\n  const fetchClients = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await axios.get(\r\n        `${baseUrl}/api/client?page=${page}&limit=${pageSize}`,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      );\r\n      setClients(response.data.data.clients);\r\n      setTotalPages(response.data.data.pagination.totalPages);\r\n    } catch (error) {\r\n      message.error(\"Failed to fetch clients.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleShowModal = (client = {}) => {\r\n    setClientData(client);\r\n    setModalShow(true);\r\n  };\r\n\r\n  const handleCloseModal = () => {\r\n    setModalShow(false);\r\n    resetClientData();\r\n  };\r\n\r\n  const resetClientData = () => {\r\n    setClientData({\r\n      id: null,\r\n      name: \"\",\r\n      industry: \"\",\r\n      phone: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n    });\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setClientData((prevData) => ({ ...prevData, [name]: value }));\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const { id, ...payload } = clientData;\r\n      if (id) {\r\n        // Update existing client\r\n        await axios.put(`${baseUrl}/api/client/${id}`, payload, {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        });\r\n        message.success(\"Client updated successfully!\");\r\n      } else {\r\n        // Create new client\r\n        await axios.post(`${baseUrl}/api/client`, payload, {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        });\r\n        message.success(\"Client created successfully!\");\r\n      }\r\n\r\n      fetchClients();\r\n      handleCloseModal();\r\n    } catch (error) {\r\n      message.error(error.response?.data?.message || \"Failed to save client.\");\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (id) => {\r\n    if (window.confirm(\"Are you sure you want to delete this client?\")) {\r\n      try {\r\n        await axios.delete(`${baseUrl}/api/client/${id}`, {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        });\r\n        message.success(\"Client deleted successfully!\");\r\n        fetchClients();\r\n      } catch (error) {\r\n        message.error(\"Failed to delete client.\");\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchClients();\r\n  }, [page]);\r\n  return (\r\n    <div\r\n      style={{\r\n        backgroundColor: \"#343a40\",\r\n        color: \"white\",\r\n        minHeight: \"100vh\",\r\n        paddingTop: \"20px\",\r\n      }}\r\n    >\r\n      <h1 className=\"text-center mb-4\">Clients</h1>\r\n      <div\r\n        className=\"d-flex justify-content-end\"\r\n        style={{ width: \"80%\", margin: \"0 auto\" }}\r\n      >\r\n        <Button\r\n          variant=\"primary\"\r\n          className=\"mb-3\"\r\n          onClick={() => handleShowModal()}\r\n        >\r\n          Add Client\r\n        </Button>\r\n      </div>\r\n      <Table\r\n        striped\r\n        bordered\r\n        hover\r\n        variant=\"dark\"\r\n        style={{ backgroundColor: \"#343a40\", width: \"80%\", margin: \"0 auto\" }}\r\n      >\r\n        <thead>\r\n          <tr>\r\n            <th>Name</th>\r\n            <th>Industry</th>\r\n            <th>Phone</th>\r\n            <th>Email</th>\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {loading ? (\r\n            <tr>\r\n              <td colSpan=\"5\" className=\"text-center\">\r\n                Loading...\r\n              </td>\r\n            </tr>\r\n          ) : clients.length === 0 ? (\r\n            <tr>\r\n              <td colSpan=\"5\" className=\"text-center\">\r\n                No data available\r\n              </td>\r\n            </tr>\r\n          ) : (\r\n            clients.map((client) => (\r\n              <tr key={client.id}>\r\n                <td>{client.name}</td>\r\n                <td>{client.industry}</td>\r\n                <td>{client.phone}</td>\r\n                <td>{client.email}</td>\r\n                <td>\r\n                  <Button\r\n                    variant=\"warning\"\r\n                    onClick={() => handleShowModal(client)}\r\n                  >\r\n                    Edit\r\n                  </Button>\r\n                  <Button\r\n                    variant=\"danger\"\r\n                    onClick={() => handleDelete(client.id)}\r\n                    className=\"ml-2\"\r\n                  >\r\n                    Delete\r\n                  </Button>\r\n                </td>\r\n              </tr>\r\n            ))\r\n          )}\r\n        </tbody>\r\n      </Table>\r\n\r\n      {clients.length > 0 && (\r\n        <div\r\n          className=\"d-flex justify-content-end mt-3\"\r\n          style={{ width: \"80%\", margin: \"0 auto\" }}\r\n        >\r\n          <Button\r\n            disabled={page === 1}\r\n            onClick={() => setPage((prev) => prev - 1)}\r\n            className=\"mr-2\"\r\n          >\r\n            Previous\r\n          </Button>\r\n          <span className=\"mr-2\">\r\n            Page {page} of {totalPages}\r\n          </span>\r\n          <Button\r\n            disabled={page === totalPages}\r\n            onClick={() => setPage((prev) => prev + 1)}\r\n          >\r\n            Next\r\n          </Button>\r\n        </div>\r\n      )}\r\n\r\n      <Modal show={modalShow} onHide={handleCloseModal}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>\r\n            {clientData.id ? \"Edit Client\" : \"Add Client\"}\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form onSubmit={handleSubmit}>\r\n            <Form.Group controlId=\"name\">\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                name=\"name\"\r\n                value={clientData.name}\r\n                onChange={handleInputChange}\r\n                required\r\n              />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"industry\">\r\n              <Form.Label>Industry</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                name=\"industry\"\r\n                value={clientData.industry}\r\n                onChange={handleInputChange}\r\n                required\r\n              />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"phone\">\r\n              <Form.Label>Phone</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                name=\"phone\"\r\n                value={clientData.phone}\r\n                onChange={handleInputChange}\r\n                required\r\n              />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"email\">\r\n              <Form.Label>Email</Form.Label>\r\n              <Form.Control\r\n                type=\"email\"\r\n                name=\"email\"\r\n                value={clientData.email}\r\n                onChange={handleInputChange}\r\n                required\r\n              />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"password\">\r\n              <Form.Label>\r\n                {clientData.id ? \"New Password\" : \"Password\"}\r\n              </Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                name=\"password\"\r\n                value={clientData.password}\r\n                onChange={handleInputChange}\r\n                required={!clientData.id}\r\n              />\r\n            </Form.Group>\r\n            <Button variant=\"primary\" type=\"submit\" className=\"mt-3\">\r\n              {clientData.id ? \"Update Client\" : \"Add Client\"}\r\n            </Button>\r\n          </Form>\r\n        </Modal.Body>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateClient;\r\n","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Table = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  striped,\n  bordered,\n  borderless,\n  hover,\n  size,\n  variant,\n  responsive,\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'table');\n  const classes = classNames(className, decoratedBsPrefix, variant && `${decoratedBsPrefix}-${variant}`, size && `${decoratedBsPrefix}-${size}`, striped && `${decoratedBsPrefix}-${typeof striped === 'string' ? `striped-${striped}` : 'striped'}`, bordered && `${decoratedBsPrefix}-bordered`, borderless && `${decoratedBsPrefix}-borderless`, hover && `${decoratedBsPrefix}-hover`);\n  const table = /*#__PURE__*/_jsx(\"table\", {\n    ...props,\n    className: classes,\n    ref: ref\n  });\n  if (responsive) {\n    let responsiveClass = `${decoratedBsPrefix}-responsive`;\n    if (typeof responsive === 'string') {\n      responsiveClass = `${responsiveClass}-${responsive}`;\n    }\n    return /*#__PURE__*/_jsx(\"div\", {\n      className: responsiveClass,\n      children: table\n    });\n  }\n  return table;\n});\nexport default Table;"],"names":["baseUrl","CreateClient","token","useSelector","selectToken","clients","setClients","useState","loading","setLoading","modalShow","setModalShow","clientData","setClientData","id","name","industry","phone","email","password","page","setPage","totalPages","setTotalPages","fetchClients","async","response","axios","get","headers","Authorization","data","pagination","error","message","handleShowModal","arguments","length","undefined","handleCloseModal","resetClientData","handleInputChange","e","value","target","prevData","useEffect","_jsxs","style","backgroundColor","color","minHeight","paddingTop","children","_jsx","className","width","margin","Button","variant","onClick","Table","striped","bordered","hover","colSpan","map","client","window","confirm","delete","success","handleDelete","disabled","prev","Modal","show","onHide","Header","closeButton","Title","Body","Form","onSubmit","preventDefault","payload","put","post","_error$response","_error$response$data","Group","controlId","Label","Control","type","onChange","required","React","_ref","ref","bsPrefix","borderless","size","responsive","props","decoratedBsPrefix","useBootstrapPrefix","classes","classNames","table","responsiveClass"],"sourceRoot":""}
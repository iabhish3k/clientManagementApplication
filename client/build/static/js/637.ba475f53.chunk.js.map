{"version":3,"file":"static/js/637.ba475f53.chunk.js","mappings":"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","sources":["views/Panvalidation.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport axios from 'axios';\r\nimport { Form } from 'react-bootstrap';\r\nimport { debounce } from 'lodash';\r\nimport { useSelector } from 'react-redux';\r\nimport { selectToken } from '../store/authSlice';\r\n\r\nconst Panvalidation = () => {\r\n  const  token  = useSelector(selectToken);\r\n  const [pan, setPan] = useState('');\r\n  const [validationResult, setValidationResult] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // Debounced function to call PAN validation API\r\n  const validatePan = async (pan) => {\r\n    if (!pan) {\r\n      setValidationResult(null);\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    try {\r\n      const response = await axios.post('http://localhost:3000/api/panvalidation', { pan }, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`\r\n        }\r\n      });\r\n      setValidationResult({ success: true, msg: response.data.msg, data: response.data.data.data });\r\n    } catch (error) {\r\n      setValidationResult({\r\n        success: false,\r\n        message: error.response?.data?.message || 'Error validating PAN',\r\n      });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Use useCallback to memoize the debounced function\r\n  const debouncedValidatePan = useCallback(\r\n    debounce((term) => {\r\n      validatePan(term);\r\n    }, 300), // 300ms delay\r\n    []\r\n  );\r\n\r\n  // Handle PAN input change\r\n  const handlePanChange = (e) => {\r\n    const { value } = e.target;\r\n    setPan(value);\r\n    debouncedValidatePan(value); // Call the debounced function\r\n  };\r\n\r\n  // Cleanup on unmount\r\n  useEffect(() => {\r\n    return () => {\r\n      debouncedValidatePan.cancel(); \r\n    };\r\n  }, [debouncedValidatePan]);\r\n\r\n  return (\r\n    <div style={{ backgroundColor: '#343a40', color: 'white', minHeight: '100vh', padding: '20px' }}>\r\n      <h1 className=\"text-center mb-4\">PAN Validation</h1>\r\n      <div className=\"d-flex justify-content-center mb-4\">\r\n        <Form.Group controlId=\"pan\" style={{ width: '400px' }}>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Enter your PAN\"\r\n            value={pan}\r\n            onChange={handlePanChange}\r\n            style={{ borderColor: loading ? 'orange' : '' }} \r\n          />\r\n        </Form.Group>\r\n      </div>\r\n\r\n      {loading && <p className=\"text-center\">Validating PAN...</p>}\r\n\r\n      {validationResult && (\r\n        <div className=\"text-center\" style={{ marginTop: '10px' }}>\r\n          <p style={{ color: validationResult.success ? 'green' : 'red' }}>\r\n            {validationResult.success ? (\r\n              <>\r\n                <div>{validationResult.msg}</div>\r\n                <br />\r\n                <strong style={{ color: 'white' }}>Details:</strong>\r\n                <div style={{ color: 'white' }}>\r\n                  <div>First Name: {validationResult.data?.first_name || \"N/A\"}</div>\r\n                  <div>Middle Name: {validationResult.data?.middle_name || \"N/A\"}</div>\r\n                  <div>Last Name: {validationResult.data?.last_name || \"N/A\"}</div>\r\n                  <div>PAN Number: {validationResult.data?.pan_number || \"N/A\"}</div>\r\n                  <div>DOB Match: {validationResult.data?.dob_match || \"N/A\"}</div>\r\n                  <div>PAN Active: {validationResult.data?.pan_active || \"N/A\"}</div>\r\n                  <div>Aadhaar Seeding Status: {validationResult.data?.aadhaar_seeding_status || \"N/A\"}</div>\r\n                </div>\r\n              </>\r\n            ) : validationResult.message}\r\n          </p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Panvalidation;\r\n"],"names":["Panvalidation","_validationResult$dat","_validationResult$dat2","_validationResult$dat3","_validationResult$dat4","_validationResult$dat5","_validationResult$dat6","_validationResult$dat7","token","useSelector","selectToken","pan","setPan","useState","validationResult","setValidationResult","loading","setLoading","debouncedValidatePan","useCallback","debounce","term","async","response","axios","post","headers","Authorization","success","msg","data","error","_error$response","_error$response$data","message","validatePan","useEffect","cancel","_jsxs","style","backgroundColor","color","minHeight","padding","children","_jsx","className","Form","Group","controlId","width","Control","type","placeholder","value","onChange","e","target","borderColor","marginTop","_Fragment","first_name","middle_name","last_name","pan_number","dob_match","pan_active","aadhaar_seeding_status"],"sourceRoot":""}